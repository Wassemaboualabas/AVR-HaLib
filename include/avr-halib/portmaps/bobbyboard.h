/* PortMap header for avr-avr-halib
 * generated by avr-pmgen 0.05 from test.portmap
 * 
 * Do not modify this file unless you really know what you are doing!
 * Change test.portmap ...
 * 
 */

#include <stdint.h>


class Button0
{
private:
	uint8_t __base [0x39];
public:
	enum { pressedLevel = false, usePullup = true };
	bool : 4;
	bool pinButton: 1;		// PINA, bit 4
	bool : 7;
	bool ddrButton: 1;		// DDRA, bit 4
	bool : 7;
	bool portButton: 1;		// PORTA, bit 4
};

class Button1
{
private:
	uint8_t __base [0x39];
public:
	enum { pressedLevel = false, usePullup = true };
	bool : 5;
	bool pinButton: 1;		// PINA, bit 5
	bool : 7;
	bool ddrButton: 1;		// DDRA, bit 5
	bool : 7;
	bool portButton: 1;		// PORTA, bit 5
};

class Button2
{
private:
	uint8_t __base [0x39];
public:
	enum { pressedLevel = false, usePullup = true };
	bool : 6;
	bool pinButton: 1;		// PINA, bit 6
	bool : 7;
	bool ddrButton: 1;		// DDRA, bit 6
	bool : 7;
	bool portButton: 1;		// PORTA, bit 6
};

class Button3
{
private:
	uint8_t __base [0x39];
public:
	enum { pressedLevel = false, usePullup = true };
	bool : 7;
	bool pinButton: 1;		// PINA, bit 7
	bool : 7;
	bool ddrButton: 1;		// DDRA, bit 7
	bool : 7;
	bool portButton: 1;		// PORTA, bit 7
};



class Led0
{
private:
	uint8_t __base [0x36];
public:
	enum { onLevel = false };
	bool : 4;
	bool pinLed: 1;		// PINB, bit 4
	bool : 7;
	bool ddrLed: 1;		// DDRB, bit 4
	bool : 7;
	bool portLed: 1;		// PORTB, bit 4
};

class Led1
{
private:
	uint8_t __base [0x36];
public:
	enum { onLevel = false };
	bool : 5;
	bool pinLed: 1;		// PINB, bit 5
	bool : 7;
	bool ddrLed: 1;		// DDRB, bit 5
	bool : 7;
	bool portLed: 1;		// PORTB, bit 5
};

class Led2
{
private:
	uint8_t __base [0x36];
public:
	enum { onLevel = false };
	bool : 6;
	bool pinLed: 1;		// PINB, bit 6
	bool : 7;
	bool ddrLed: 1;		// DDRB, bit 6
	bool : 7;
	bool portLed: 1;		// PORTB, bit 6
};

class Led3
{
private:
	uint8_t __base [0x36];
public:
	enum { onLevel = false };
	bool : 7;
	bool pinLed: 1;		// PINB, bit 7
	bool : 7;
	bool ddrLed: 1;		// DDRB, bit 7
	bool : 7;
	bool portLed: 1;		// PORTB, bit 7
};

class LedBlock0123
{
private:
	uint8_t __base [0x36];
public:
	enum { onLevel = 0x0 };
	uint8_t : 4;
	uint8_t pinLed0123: 4;		// PINB, bit 4-7
	uint8_t : 4;
	uint8_t ddrLed0123: 4;		// DDRB, bit 4-7
	uint8_t : 4;
	uint8_t portLed0123: 4;	// PORTB, bit 4-7

	void setLedsPin(uint8_t i)
	{
		pinLed0123 = i;
	}
	uint8_t getLedsPin()
	{
		return pinLed0123;
	}
	void setLedsDdr(uint8_t i)
	{
		ddrLed0123 = i;
	}
	uint8_t getLedsDdr()
	{
		return ddrLed0123;
	}
	void setLedsPort(uint8_t i)
	{
		portLed0123 = i;
	}
	uint8_t getLedsPort()
	{
		return portLed0123;
	}

};


