/* PortMap header for avr-halib
 * generated by avr-pmgen 0.05 from test.portmap
 * 
 * Do not modify this file unless you really know what you are doing!
 * Change test.portmap ...
 * 
 */

#include <stdint.h>


struct Button0
{
	enum { pressedLevel = false, usePullup = true };
	volatile bool : 8 * 0x39;
	volatile bool : 4;
	volatile bool pinButton: 1;		// PINA, bit 4
	volatile bool : 7;
	volatile bool ddrButton: 1;		// DDRA, bit 4
	volatile bool : 7;
	volatile bool portButton: 1;		// PORTA, bit 4
};

struct Button1
{
	enum { pressedLevel = false, usePullup = true };
	volatile bool : 8 * 0x39;
	volatile bool : 5;
	volatile bool pinButton: 1;		// PINA, bit 5
	volatile bool : 7;
	volatile bool ddrButton: 1;		// DDRA, bit 5
	volatile bool : 7;
	volatile bool portButton: 1;		// PORTA, bit 5
};

struct Button2
{
	enum { pressedLevel = false, usePullup = true };
	volatile bool : 8 * 0x39;
	volatile bool : 6;
	volatile bool pinButton: 1;		// PINA, bit 6
	volatile bool : 7;
	volatile bool ddrButton: 1;		// DDRA, bit 6
	volatile bool : 7;
	volatile bool portButton: 1;		// PORTA, bit 6
};

struct Button3
{
	enum { pressedLevel = false, usePullup = true };
	volatile bool : 8 * 0x39;
	volatile bool : 7;
	volatile bool pinButton: 1;		// PINA, bit 7
	volatile bool : 7;
	volatile bool ddrButton: 1;		// DDRA, bit 7
	volatile bool : 7;
	volatile bool portButton: 1;		// PORTA, bit 7
};



struct Led0
{
	enum { onLevel = false };
	volatile bool : 8 * 0x36;
	volatile bool : 4;
	volatile bool pinLed: 1;		// PINB, bit 4
	volatile bool : 7;
	volatile bool ddrLed: 1;		// DDRB, bit 4
	volatile bool : 7;
	volatile bool portLed: 1;		// PORTB, bit 4
};

struct Led1
{
	enum { onLevel = false };
	volatile bool : 8 * 0x36;
	volatile bool : 5;
	volatile bool pinLed: 1;		// PINB, bit 5
	volatile bool : 7;
	volatile bool ddrLed: 1;		// DDRB, bit 5
	volatile bool : 7;
	volatile bool portLed: 1;		// PORTB, bit 5
};

struct Led2
{
	enum { onLevel = false };
	volatile bool : 8 * 0x36;
	volatile bool : 6;
	volatile bool pinLed: 1;		// PINB, bit 6
	volatile bool : 7;
	volatile bool ddrLed: 1;		// DDRB, bit 6
	volatile bool : 7;
	volatile bool portLed: 1;		// PORTB, bit 6
};

struct Led3
{
	enum { onLevel = false };
	volatile bool : 8 * 0x36;
	volatile bool : 7;
	volatile bool pinLed: 1;		// PINB, bit 7
	volatile bool : 7;
	volatile bool ddrLed: 1;		// DDRB, bit 7
	volatile bool : 7;
	volatile bool portLed: 1;		// PORTB, bit 7
};

struct LedBlock0123
{
	enum { onLevel = 0x0 };
      	volatile bool : 8 * 0x36;
	volatile uint8_t : 4;
	volatile uint8_t pinLed0123: 4;		// PINB, bit 4-7
	volatile uint8_t : 4;
	volatile uint8_t ddrLed0123: 4;		// DDRB, bit 4-7
	volatile uint8_t : 4;
	volatile uint8_t portLed0123: 4;	// PORTB, bit 4-7

	void setLedsPin(uint8_t i)
	{
		pinLed0123 = i;
	}
	uint8_t getLedsPin()
	{
		return pinLed0123;
	}
	void setLedsDdr(uint8_t i)
	{
		ddrLed0123 = i;
	}
	uint8_t getLedsDdr()
	{
		return ddrLed0123;
	}
	void setLedsPort(uint8_t i)
	{
		portLed0123 = i;
	}
	uint8_t getLedsPort()
	{
		return portLed0123;
	}

};


