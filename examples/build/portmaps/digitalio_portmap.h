// THIS FILE WAS GENERATED FROM FILE "./portmaps/digitalio.portmap" BY AVR-HALIB PORTMAP GENERATOR 0.1
// DO NOT EDIT THIS FILE CAUSE CHANGES MAY BE OVERWRITTEN. CHANGE "./portmaps/digitalio.portmap" INSTEAD!
#include "avr-halib/avr/portmap.h"
#pragma once

struct Input		// portmap for at90can128
{
	enum { usePullup = 0xf, invertLevel = 0x5 };
	union
	{
		struct		// pins ipins: a 4-7;
		{
			uint8_t __pad0 [0x20];
			uint8_t : 4;
			uint8_t pin : 4;		// PINA (0x20), bit 4-7
			uint8_t : 4;
			uint8_t ddr : 4;		// DDRA (0x21), bit 4-7
			uint8_t : 4;
			uint8_t port : 4;		// PORTA (0x22), bit 4-7
		} ipins;
		struct		// vport inPort
		{
			union
			{
				struct		// pins ipins: a 4-7;
				{
					uint8_t __pad0 [0x20];
					uint8_t : 4;
					uint8_t pin : 4;		// PINA (0x20), bit 4-7
					uint8_t : 4;
					uint8_t ddr : 4;		// DDRA (0x21), bit 4-7
					uint8_t : 4;
					uint8_t port : 4;		// PORTA (0x22), bit 4-7
				} ipins;
			};
			uint8_t getPin()
			{
				SyncPortmap(*this);
				return (ipins.pin);
			}
			void setPin(uint8_t i)
			{
				ipins.pin = (i & 0xf);
			}
			uint8_t getPort()
			{
				SyncPortmap(*this);
				return (ipins.port);
			}
			void setPort(uint8_t i)
			{
				ipins.port = (i & 0xf);
			}
			uint8_t getDdr()
			{
				SyncPortmap(*this);
				return (ipins.ddr);
			}
			void setDdr(uint8_t i)
			{
				ipins.ddr = (i & 0xf);
			}
		} inPort;
	};
};


struct Output		// portmap for at90can128
{
	enum { initValue = 0x0, invertLevel = 0x0 };
	union
	{
		struct		// pins opins: a 0-3;
		{
			uint8_t __pad0 [0x20];
			uint8_t pin : 4;		// PINA (0x20), bit 0-3
			uint8_t : 4;
			uint8_t ddr : 4;		// DDRA (0x21), bit 0-3
			uint8_t : 4;
			uint8_t port : 4;		// PORTA (0x22), bit 0-3
		} opins;
		struct		// vport outPort
		{
			union
			{
				struct		// pins opins: a 0-3;
				{
					uint8_t __pad0 [0x20];
					uint8_t pin : 4;		// PINA (0x20), bit 0-3
					uint8_t : 4;
					uint8_t ddr : 4;		// DDRA (0x21), bit 0-3
					uint8_t : 4;
					uint8_t port : 4;		// PORTA (0x22), bit 0-3
				} opins;
			};
			uint8_t getPin()
			{
				SyncPortmap(*this);
				return (opins.pin);
			}
			void setPin(uint8_t i)
			{
				opins.pin = (i & 0xf);
			}
			uint8_t getPort()
			{
				SyncPortmap(*this);
				return (opins.port);
			}
			void setPort(uint8_t i)
			{
				opins.port = (i & 0xf);
			}
			uint8_t getDdr()
			{
				SyncPortmap(*this);
				return (opins.ddr);
			}
			void setDdr(uint8_t i)
			{
				opins.ddr = (i & 0xf);
			}
		} outPort;
	};
};

