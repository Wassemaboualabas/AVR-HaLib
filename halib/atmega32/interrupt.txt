

IMPLEMENT_INTERRUPT_CLASS(SIG_INTERRUPT0, Interrupt0)
IMPLEMENT_INTERRUPT_CLASS(SIG_INTERRUPT1, Interrupt1)
IMPLEMENT_INTERRUPT_CLASS(SIG_INTERRUPT2, Interrupt2)
IMPLEMENT_INTERRUPT_CLASS(SIG_OUTPUT_COMPARE2, InterruptOutputCompare2)
IMPLEMENT_INTERRUPT_CLASS(SIG_OVERFLOW2, InterruptOverflow2)
IMPLEMENT_INTERRUPT_CLASS(SIG_INPUT_CAPTURE1, InterruptInputCapture1)
IMPLEMENT_INTERRUPT_CLASS(SIG_OUTPUT_COMPARE1A, InterruptOutputCompare1A)
IMPLEMENT_INTERRUPT_CLASS(SIG_OUTPUT_COMPARE1B, InterruptOutputCompare1B)
IMPLEMENT_INTERRUPT_CLASS(SIG_OVERFLOW1, InterruptOverflow1)
IMPLEMENT_INTERRUPT_CLASS(SIG_OUTPUT_COMPARE0, InterruptOutputCompare0)
IMPLEMENT_INTERRUPT_CLASS(SIG_OVERFLOW0, InterruptOverflow0)
IMPLEMENT_INTERRUPT_CLASS(SIG_SPI, InterruptSpi)
IMPLEMENT_INTERRUPT_CLASS(SIG_UART_RECV, InterruptUartRecv)
IMPLEMENT_INTERRUPT_CLASS(SIG_UART_DATA, InterruptUartData)
IMPLEMENT_INTERRUPT_CLASS(SIG_USART_TRANS, InterruptUartTrans)
IMPLEMENT_INTERRUPT_CLASS(SIG_ADC, InterruptAdConvComplete)
IMPLEMENT_INTERRUPT_CLASS(SIG_EEPROM_READY, InterruptEepromReady)
IMPLEMENT_INTERRUPT_CLASS(SIG_COMPARATOR, InterruptComparator)
IMPLEMENT_INTERRUPT_CLASS(SIG_2WIRE_SERIAL, InterruptTwoWireSerial)
IMPLEMENT_INTERRUPT_CLASS(SIG_SPM_READY, InterruptSpmReady)


DECLARE_INTERRUPT_CLASS(Interrupt0)			// External Interrupt Request 0
DECLARE_INTERRUPT_CLASS(Interrupt1)			// External Interrupt Request 1
DECLARE_INTERRUPT_CLASS(Interrupt2)			// External Interrupt Request 2
DECLARE_INTERRUPT_CLASS(InterruptOutputCompare2)	// Timer/Counter2 Compare Match
DECLARE_INTERRUPT_CLASS(InterruptOverflow2)		// Timer/Counter2 Overflow
DECLARE_INTERRUPT_CLASS(InterruptInputCapture1)	// Timer/Counter1 Capture Event
DECLARE_INTERRUPT_CLASS(InterruptOutputCompare1A)	// Timer/Counter1 Compare Match A
DECLARE_INTERRUPT_CLASS(InterruptOutputCompare1B)	// Timer/Counter1 Compare Match B
DECLARE_INTERRUPT_CLASS(InterruptOverflow1)		// Timer/Counter1 Overflow
DECLARE_INTERRUPT_CLASS(InterruptOutputCompare0)	// Timer/Counter0 Compare Match
DECLARE_INTERRUPT_CLASS(InterruptOverflow0)		// Timer/Counter0 Overflow
DECLARE_INTERRUPT_CLASS(InterruptSpi)			// Serial Transfer Complete
DECLARE_INTERRUPT_CLASS(InterruptUartRecv)		// USART Rx Complete
DECLARE_INTERRUPT_CLASS(InterruptUartData)		// USART Data Register Empty
DECLARE_INTERRUPT_CLASS(InterruptUartTrans)		// USART Tx Complete
DECLARE_INTERRUPT_CLASS(InterruptAdConvComplete)	// ADC Conversion Complete
DECLARE_INTERRUPT_CLASS(InterruptEepromReady)		// EEPROM Ready
DECLARE_INTERRUPT_CLASS(InterruptComparator)		// Analog Comparator
DECLARE_INTERRUPT_CLASS(InterruptTwoWireSerial)	// 2-wire Serial Interface
DECLARE_INTERRUPT_CLASS(InterruptSpmReady)		// Store Program Memory Ready


